////////////////////////////////////////////////////////////////////////////////////////////////////
// NoesisGUI - http://www.noesisengine.com
// Copyright (c) 2013 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#include <NsCore/Error.h>


namespace Noesis
{


////////////////////////////////////////////////////////////////////////////////////////////////////
inline BaseRefCounted::BaseRefCounted()
{
    mRefCount = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline BaseRefCounted::~BaseRefCounted()
{
    // Note that 1 is valid when the object lives is the stack or is being manually destroyed
    NS_CHECK(mRefCount == 1 || mRefCount == 0, "Unexpected RefCount(%d) deleting object at %p",
        (int32_t)mRefCount, this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::AddReference() const
{
    return InternalAddReference();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::Release() const
{
    return InternalRelease();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::GetNumReferences() const
{
    return mRefCount;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::OnDestroy() const
{
    delete this;
    return 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::InternalAddReference() const
{
    return ++mRefCount;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline int32_t BaseRefCounted::InternalRelease() const
{
    NS_ASSERT(mRefCount > 0);
    int32_t ref = --mRefCount;

    if (ref == 0)
    {
        return OnDestroy();
    }

    return ref;
}

}
