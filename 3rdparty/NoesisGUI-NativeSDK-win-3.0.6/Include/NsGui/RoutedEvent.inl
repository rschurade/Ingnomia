////////////////////////////////////////////////////////////////////////////////////////////////////
// NoesisGUI - http://www.noesisengine.com
// Copyright (c) 2013 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


namespace Noesis
{

////////////////////////////////////////////////////////////////////////////////////////////////////
inline RoutedEventArgs::RoutedEventArgs(BaseComponent* s, const RoutedEvent* e): source(s),
    routedEvent(e) {}

////////////////////////////////////////////////////////////////////////////////////////////////////
template<class T>
inline RoutedPropertyChangedEventArgs<T>::RoutedPropertyChangedEventArgs(BaseComponent* s,
    const RoutedEvent* e, typename Param<T>::Type oldV, typename Param<T>::Type newV):
     RoutedEventArgs(s, e), oldValue(oldV), newValue(newV) {}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline Symbol RoutedEvent::GetName() const
{
    return mName;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline const TypeClass* RoutedEvent::GetOwnerType() const
{
    return mOwnerType;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
inline RoutingStrategy RoutedEvent::GetRoutingStrategy() const
{
    return mRoutingStrategy;
}

}
